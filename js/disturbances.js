// Generated by CoffeeScript 1.6.3
(function() {
  var Disturbance, _ref, _ref1, _ref2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Disturbance = (function() {
    function Disturbance(_opts) {
      this.options = _opts;
    }

    Disturbance.prototype.stepCount = function() {
      return this._stepCount || (this._stepCount = 0);
    };

    Disturbance.prototype.step = function() {
      this.performStep();
      return this._stepCount = this.stepCount() + 1;
    };

    Disturbance.prototype.performStep = function() {};

    Disturbance.prototype.done = function() {};

    return Disturbance;

  })();

  this.GridDisturbance = (function(_super) {
    __extends(GridDisturbance, _super);

    function GridDisturbance() {
      _ref = GridDisturbance.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GridDisturbance.prototype.speed = 0.001;

    GridDisturbance.prototype.performStep = function() {
      var box, i, _i, _len, _ref1, _results;
      _ref1 = this.options.grid.boxes();
      _results = [];
      for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {
        box = _ref1[i];
        _results.push(box.rotation.x += this.speed * (i + 1));
      }
      return _results;
    };

    GridDisturbance.prototype.done = function() {
      if (this.stepCount() * this.speed >= Math.PI) {
        return true;
      }
      return false;
    };

    return GridDisturbance;

  })(Disturbance);

  this.VerticalDisturbance = (function(_super) {
    __extends(VerticalDisturbance, _super);

    function VerticalDisturbance() {
      _ref1 = VerticalDisturbance.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    VerticalDisturbance.prototype.speed = 0.001;

    VerticalDisturbance.prototype.performStep = function() {
      var i, x, y, _i, _ref2, _results;
      i = 1;
      _results = [];
      for (x = _i = 0, _ref2 = this.options.grid.cols() - 1; 0 <= _ref2 ? _i <= _ref2 : _i >= _ref2; x = 0 <= _ref2 ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref3, _results1;
          _results1 = [];
          for (y = _j = 0, _ref3 = this.options.grid.rows() - 1; 0 <= _ref3 ? _j <= _ref3 : _j >= _ref3; y = 0 <= _ref3 ? ++_j : --_j) {
            this.options.grid.getBoxXY(x, y).rotation.y += this.speed * i;
            _results1.push(i++);
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    VerticalDisturbance.prototype.done = function() {
      if (this.stepCount() > 0 && this.stepCount() * this.speed >= Math.PI) {
        return true;
      }
      return false;
    };

    return VerticalDisturbance;

  })(Disturbance);

  this.BumpDisturbance = (function(_super) {
    __extends(BumpDisturbance, _super);

    function BumpDisturbance() {
      _ref2 = BumpDisturbance.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    BumpDisturbance.prototype.performStep = function() {
      return this.options.grid.boxes()[0].position.z += (this.stepCount() - 5) * 10;
    };

    BumpDisturbance.prototype.done = function() {
      return this.stepCount() >= 11;
    };

    return BumpDisturbance;

  })(Disturbance);

}).call(this);
